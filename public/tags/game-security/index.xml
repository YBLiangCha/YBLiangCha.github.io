<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Game Security on Loft&#39;s Blog</title>
    <link>https://ybliangcha.github.io/tags/game-security/</link>
    <description>Recent content in Game Security on Loft&#39;s Blog</description>
    <image>
      <title>Loft&#39;s Blog</title>
      <url>https://i.postimg.cc/7hwBy7VS/calcr.png</url>
      <link>https://i.postimg.cc/7hwBy7VS/calcr.png</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>zh</language>
    <copyright>©2025 Loft&amp;rsquo;s Blog</copyright>
    <lastBuildDate>Fri, 16 Aug 2024 01:12:53 +0800</lastBuildDate>
    <atom:link href="https://ybliangcha.github.io/tags/game-security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PTE Hook原理浅析</title>
      <link>https://ybliangcha.github.io/posts/pte-hook-analysis/</link>
      <pubDate>Fri, 16 Aug 2024 01:12:53 +0800</pubDate>
      <guid>https://ybliangcha.github.io/posts/pte-hook-analysis/</guid>
      <description>&lt;h3 id=&#34;什么是pte-hook&#34;&gt;什么是PTE Hook&lt;/h3&gt;
&lt;p&gt;常规的inlineHook思路是直接修改目标函数的代码，使其先执行我们自己的函数，再跳转回来执行原函数。这种Hook是全局的，即Windows中每一个进程一旦调用被Hook的函数，就会受到我们的影响，也很容易被PatchGuard检查到。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
